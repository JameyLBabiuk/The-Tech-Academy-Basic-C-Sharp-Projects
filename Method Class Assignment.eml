MIME-Version: 1.0
Date: Mon, 5 Jun 2023 15:50:10 -0600
Message-ID: <CAAr00NUXXOeC8OJKevyvFZEP3XynhR1urcboOSBeiZ4A-H18Mw@mail.gmail.com>
Subject: Method Class  Assignment 
From: Jamey Babiuk <jamnjeep66@gmail.com>
To: Jamey Babiuk <jamnjeep66@gmail.com>
Content-Type: multipart/alternative; boundary="00000000000012436d05fd68e374"

--00000000000012436d05fd68e374
Content-Type: text/plain; charset="UTF-8"

```c#
using System;

namespace ConsoleApp
{
    // Create a class
    publicclass MathOperations
    {
        // Create a void method that takes two integers as parameters
        public void PerformMathOperation(int num1, int num2)
        {
            // Do a math operation on the first integer
            int result =class MathClass
    {
        // Create a void method that takes two integers as parameters
        public void DoMath(int num1, int num2)
        {
            // Have the method do a math operation on the first integer
            int result = num1 * 5;
            // Display the second integer to the screen
            Console.WriteLine($"The second number is: {num2}");
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            // Instantiate the class
            MathClass math = new MathClass();

            // Call the method in the class, passing in two numbers
            math.DoMath(2, 8);

            // Call the method in the class, specifying the parameters by
name
            math.DoMath(num1: 3, num2: 10);

            // Wait for user input before closing the console window
            Console.ReadLine();
        }
    }
}
```

Here's what's happening in the code:

- We create a new class called `MathClass`. Inside this class, we define a
method called `DoMath` that takes two integers as parameters (`num1` and
`num2`).
- Inside the `DoMath` method, we perform a basic math operation on the
first integer (`num1`) and then output the second integer (`num2`) to the
console using `Console.WriteLine`.
- In the `Main` method of the console app, we instantiate an instance of
`MathClass` and store it in a variable called `math`.
- We then call the `DoMath` method twice, once with the arguments `(2, 8)`
and once with the named arguments `(num1: 3, num2: 10)`. This will output
messages to the console for each call.
- Finally, we use `Console.ReadLine()` to keep the console window open
until the user hits a key. This is just so that we can see the output
before the window closes

--00000000000012436d05fd68e374
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"auto">```c#<div dir=3D"auto">using System;</div><div dir=3D"aut=
o"><br></div><div dir=3D"auto">namespace ConsoleApp</div><div dir=3D"auto">=
{</div><div dir=3D"auto">=C2=A0 =C2=A0 // Create a class</div><div dir=3D"a=
uto">=C2=A0 =C2=A0 publicclass MathOperations</div><div dir=3D"auto">=C2=A0=
 =C2=A0 {</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 // Create a vo=
id method that takes two integers as parameters</div><div dir=3D"auto">=C2=
=A0 =C2=A0 =C2=A0 =C2=A0 public void PerformMathOperation(int num1, int num=
2)</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 {</div><div dir=3D"au=
to">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 // Do a math operation on the=
 first integer</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0 int result =3Dclass MathClass</div><div dir=3D"auto">=C2=A0 =C2=A0 {=
</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 // Create a void method=
 that takes two integers as parameters</div><div dir=3D"auto">=C2=A0 =C2=A0=
 =C2=A0 =C2=A0 public void DoMath(int num1, int num2)</div><div dir=3D"auto=
">=C2=A0 =C2=A0 =C2=A0 =C2=A0 {</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 // Have the method do a math operation on the first i=
nteger</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 int=
 result =3D num1 * 5;</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 // Display the second integer to the screen</div><div dir=3D"=
auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Console.WriteLine($&quot;Th=
e second number is: {num2}&quot;);</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=
=A0 =C2=A0 }</div><div dir=3D"auto">=C2=A0 =C2=A0 }</div><div dir=3D"auto">=
<br></div><div dir=3D"auto">=C2=A0 =C2=A0 class Program</div><div dir=3D"au=
to">=C2=A0 =C2=A0 {</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 stat=
ic void Main(string[] args)</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=
=A0 {</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 // I=
nstantiate the class</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 MathClass math =3D new MathClass();</div><div dir=3D"auto"><br><=
/div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 // Call th=
e method in the class, passing in two numbers</div><div dir=3D"auto">=C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 math.DoMath(2, 8);</div><div dir=3D"aut=
o"><br></div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 //=
 Call the method in the class, specifying the parameters by name</div><div =
dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 math.DoMath(num1: 3,=
 num2: 10);</div><div dir=3D"auto"><br></div><div dir=3D"auto">=C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 // Wait for user input before closing the c=
onsole window</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 Console.ReadLine();</div><div dir=3D"auto">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =
}</div><div dir=3D"auto">=C2=A0 =C2=A0 }</div><div dir=3D"auto">}</div><div=
 dir=3D"auto">```</div><div dir=3D"auto"><br></div><div dir=3D"auto">Here&#=
39;s what&#39;s happening in the code:</div><div dir=3D"auto"><br></div><di=
v dir=3D"auto">- We create a new class called `MathClass`. Inside this clas=
s, we define a method called `DoMath` that takes two integers as parameters=
 (`num1` and `num2`).</div><div dir=3D"auto">- Inside the `DoMath` method, =
we perform a basic math operation on the first integer (`num1`) and then ou=
tput the second integer (`num2`) to the console using `Console.WriteLine`.<=
/div><div dir=3D"auto">- In the `Main` method of the console app, we instan=
tiate an instance of `MathClass` and store it in a variable called `math`.<=
/div><div dir=3D"auto">- We then call the `DoMath` method twice, once with =
the arguments `(2, 8)` and once with the named arguments `(num1: 3, num2: 1=
0)`. This will output messages to the console for each call.</div><div dir=
=3D"auto">- Finally, we use `Console.ReadLine()` to keep the console window=
 open until the user hits a key. This is just so that we can see the output=
 before the window closes</div></div>

--00000000000012436d05fd68e374--